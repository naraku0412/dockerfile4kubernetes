#!/bin/bash

# Copyright 2015 The Kubernetes Authors All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

. /start-common.sh

service ssh start

echo "ssh passwd: $SSH_PASSWD"

THIS_IP=${POD_IP}
HADOOP_HOME=/opt/hadoop
HADOOP_PREFIX=${HADOOP_HOME}
HADOOP_CONF_DIR="${HADOOP_HOME}/etc/hadoop"
HADOOP_YARN_HOME=${HADOOP_HOME}
FILE=${HADOOP_HOME}/etc/hadoop/slaves

[ -e /mnt/$(hostname -s) ] || mkdir -p /mnt/$(hostname -s)

sed -i "s/hadoop-master/${THIS_IP}/" $HADOOP_HOME/etc/hadoop/core-site.xml
sed -i "s/hadoop-master/${THIS_IP}/" $HADOOP_HOME/etc/hadoop/yarn-site.xml
sed -i "s/{{}}/mnt\/$(hostname -s)/" $HADOOP_HOME/etc/hadoop/hdfs-site.xml

echo -n '' > ${HADOOP_CONF_DIR}/slaves

WAIT="10"
i=0
while true; do 
  if [ "$i" -gt "$TRIES" ]; then
    echo "=== Cannot resolve the DNS entry for $DSCV. Has the service been created yet, and is SkyDNS functional?"
    echo "=== See http://kubernetes.io/v1.1/docs/admin/dns.html for more details on DNS integration."
    echo "=== Sleeping ${WAIT}s before pod exit."
    sleep $WAIT
    exit 0 
  fi
  CONFUSE=$(getent hosts $DSCV)
  if [ -z "CONFUSE" ]; then
    i=$[i+1]
    sleep 1
  else
    break;
  fi
done
j=0
for ip in $CONFUSE; do
  if [[ $ip =~ ^([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]{1,2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$ ]] && [ "127.0.0.1" != "$ip" ] && [ "$THIS_IP" != "$ip" ]; then
    WORKER=$ip
    if [ "0" == "$j" ]; then
      echo $WORKER > $FILE
    else
      echo $WORKER >> $FILE
    fi
  else
    echo "$(date) - $0 - worker: ip -> $WORKER, name -> $ip, in the cluster."
    j=$[$j+1]
  fi
done

[-e /mnt/$(hostname -s)/hdfs/namenode ] || ]$HADOOP_PREFIX/bin/hdfs namenode -format
$HADOOP_PREFIX/sbin/hadoop-daemon.sh --config $HADOOP_CONF_DIR --script hdfs start namenode
tail -f /dev/null
